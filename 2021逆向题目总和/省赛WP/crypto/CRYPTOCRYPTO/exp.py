import random
from binascii import unhexlify
from Crypto.Cipher import AES
from Crypto.Util.number import *

data=[901802998,2773858739,2080610401,4216518002,21192838,911740701,3041326528,3744404286,2166909108,253829545,1028296442,1933340302,4168618987,2410034132,3124614296,4131935595,3111161533,232399722,1101086652,2256182556,459474569,2883118888,152761269,3648871826,2294726727,4215218841,3069211876,1303802108,3015128872,3324702314,551731933,413549720,143929718,3920809893,3628276302,3637549266,4170136136,2605833098,2587055987,1951918001,1633389893,3310758213,1753217267,3361766423,2726552330,327505867,2789004472,1818796775,971832742,1793730735,311465145,336815995,622452131,950127795,4224328341,2144357091,1671190200,1069637723,966453354,712429868,1476510053,3480529745,634065018,1363196977,1975032728,1745989408,426373040,253941928,2960960087,3992330896,116218824,4226922458,2410298219,1667512665,2682636176,2747614917,4026367448,2701275869,882190215,983655052,3220856689,2533348546,1293199278,3922163169,2959955195,962409927,816959153,27985005,2821495126,661422127,3737697466,618556601,1058382897,820701217,4006943011,3639205141,2878433181,3905219668,1974708060,3314574757,424739374,267030814,3905759196,1069245702,634804490,1386611505,207983637,2844835347,7705765,4008831156,1861993995,3048825620,1619821120,1544383651,2980575379,2429170866,2833513699,2103750597,1441022752,3364639732,3429921664,4219857828,2478275659,3765300817,2655806843,2241984529,3865411801,3560407864,1361357302,2215786279,1290364610,3366898687,1093300666,1117089424,3641008045,3301736328,3329978448,2437610153,3845707810,247896209,2926522168,3709399342,361087473,2165812285,2787806495,881067206,490973964,193060669,3831257147,131772910,2740287081,1325240417,1650049106,4084059404,3814107767,1940528805,1949017416,736343409,3614535719,2063549884,2313963127,1840212508,20387398,2018842503,1955566083,3246899223,1343267873,1602564392,1464403738,1056283200,523601880,871382722,634338624,1595370371,81539185,2633401783,828350173,2931386705,3794687615,3893341930,3928948314,3514250124,1416683766,2840398193,1714498103,2063150340,3502840130,2544777109,736392910,429454762,3728532581,2445560726,3593156682,4282572192,178054479,2821964324,3661336640,4006693270,2122418253,3961757800,2015155704,1173073025,409862891,321880015,2985981716,1221590603,1002493166,1648812325,2559076377,3741123537,1410267923,3308407339,2815701501,1283552940,3271002268,4158333446,2787958131,2719155369,2150286245,2018306443,2608399019,1649334712,3740252876,2215204352,3870787200,1033567363,4289708262,3566742205,4175790177,3308266219,1961006998,834385771,222037767,2425966621,2345281258,2008260996,1445605378,3810474153,1374282498,1787753394,914965851,1073191740,2417354596,1299277145,2332348134,2197574709,2037401959,1548701911,1252496057,3225435232,1228216582,2636918474,805030537,374341469,3629839003,20357964,927073692,3306374263,2730991091,383138196,3620696088,2721636719,2005820882,718414977,1860356190,2983129087,1878868154,1915462574,2606435538,897966369,365810703,1676269185,3941795814,2822102843,265907678,2519921140,1382744385,1767063036,4076428624,3884097933,580336133,1660520004,1146086591,3909768894,762709866,2881687916,3237069383,3828868670,566309326,2659478323,4055484,1203618824,3277809965,799073589,3890896494,1407059769,2520442604,1843405881,1523945853,1449269475,1601332567,2033408344,3317480461,816816885,3947962079,216244362,3463249189,2189348027,474809581,3350305249,1148645733,40770812,2311140093,1008081118,1672303791,3052218572,1780218896,2672580104,1018492839,2732348306,1449246647,1129007,1453069824,4137156053,1157745610,458252911,261201892,183246050,397551972,2064746081,902597598,368731593,1096863995,4008236936,2554528429,2573078711,3336739739,3425281619,2668165511,3541965193,3650442659,3986135264,1449476586,3034051198,479718542,1632300477,1770430907,3995744893,788185432,870742547,3530530616,3097673622,1692299201,3196117210,3905039112,743345492,3216545037,2136237490,2156499978,563982976,641458790,2983496659,1640958707,2403169332,2540956514,2698195502,3936793509,1767553381,3889077760,3438208318,3769447307,1833370386,1267564512,2932011445,276252568,1121187189,1511143824,3937471355,2347225378,742178659,3490497157,640151513,3012109056,2675071700,3152674886,8554483,3989636526,3755476954,1429767174,1376926975,2281192233,2945947612,243359104,2664395358,686660631,2535693434,3019309652,3687738827,3866442153,3732731888,2122217410,389757686,3521936230,62540573,2147382826,2031580695,533745790,1221030094,1655783993,110322832,2005203791,3841203837,1730635702,2332781711,225154396,911694278,2154368012,2944062045,3779350334,3672750464,3246757872,2086476934,736830838,2342797686,1129401145,1034071996,2843629583,2344200289,352205120,2614619711,1320902670,4117780652,4283940748,1082671025,2321978579,1940463623,308584695,4174900561,2326770427,797587953,816721040,2668176358,2153590613,1510395415,180018261,3487583019,2073254727,1443684769,806934919,3502080632,4177545656,3180266690,2145432924,2173203914,1932747396,3438720621,1924467891,560331387,2673009420,178967099,1960154297,104401971,3023828938,786644141,1390009560,3502867703,1752544184,3127829823,2368175831,1739746535,876150026,1661123114,385118886,3728517492,482493191,1756782786,2531303890,2218191337,3791835180,1423377342,2321783111,814688432,1508399701,2434839951,248359251,1074222990,1952471490,2139392122,174627174,3881096029,859995900,4120324507,3010649493,782551320,1852813187,2628884088,359274492,1342983853,224304950,3621705140,2148205456,1625980070,1118793336,2988840699,2777169831,1834932858,3957592930,868441469,3917631501,2702945764,695267966,2054517559,2162578202,2919988866,2205560953,1772495409,1395257380,1314357693,427566318,2276817410,2647169767,1332899806,560986624,1066268760,2746324909,1903271431,768206865,581077435,25097664,335927953,1928476204,306009576,2688170558,1211586693,3944038225,1321922012,2835048023,1882144054,456219283,1850432570,1810150247,661855817,3786606244,1114746692,3356695341,3586704721,1113591758,2228529944,2506602114,3810574657,1528593123,806543660,556401620,701221056,617411462,3191523269,1202540720,4272163470,2634561430,2200259620,3594041618,1811986271,3879305571,494729469,379285276,3871150686,8035158,2622444987,3845512491,4141516692,3133823541,3931032954,1700042125,2521723389,2565911841,1350003335,1999762147,3060871851,1624121361,1292800602,2801219519,3564023194,1692796865,1584611188,3976111486,1579463583,3960694936,219140156,1297120630,328276651,435546589,1533988105,3002021181,556970181,3540286520,3517155690,340751167,4133697740,3447823740,147833151,2766033509,433312261,3289658426,1888106117,1448557169,2405217340,4203005205,3036503957,3823029817,3168478716,2840506503,325856363,1690280003,3462693947,3650668696,1933463390,2163183276,2120004453,4045809044,229820570,2111629059,1170806194,1419825325,3508858629]

def right(n,bit):
     x=n
     if n<0 and bit>0:
         n=(2147483648*2+n)>>bit
     else:
         n=n>>bit
     return n

def unBitshiftLeftXor(value, shift, mask):
    i = 0
    res = 0
    while i * shift < 32:
        partMask = right(-1,(32 - shift)) << (shift * i)
        part = value & partMask
        value ^= (part << shift) & mask
        res |= part
        i += 1
    return res

def unBitshiftRightXor(value, shift, mask):
    i = 0
    res = 0
    while i * shift < 32:
        partMask = right((-1 << (32 - shift)),(shift * i))
        part = value & partMask
        value ^= right(part,shift)
        res |= part
        i += 1
    return res

def getState(value):
    value = unBitshiftRightXor(value, 18, 0xffffffff)
    value = unBitshiftLeftXor(value, 15, 0xefc60000)
    value = unBitshiftLeftXor(value, 7, 0x9d2c5680)
    value = unBitshiftRightXor(value, 11, 0xffffffff)
    return value

def getflag(data):
    states = [getState(_) for _ in data]
    for i in range(624):
        for j in range(i, 624):
            states[i] ^= (j % 256)
    s = (3, tuple(states + [0]), None)
    random.setstate(s)
    key = long_to_bytes(random.getrandbits(128))
    aes = AES.new(key, AES.MODE_ECB)
    flag = aes.decrypt(unhexlify("a56367a4cf3ce32226b894890dcc8e8770cb7928cc53e7d48036e108ecd3b65bc80c7e1e55b0020e3bb9b84ddc63376d"))
    print(flag)


if __name__ == '__main__':
    getflag(data)

# flag{5FSB8f5ZRwouow77tT09V4icpflf0AIg}
